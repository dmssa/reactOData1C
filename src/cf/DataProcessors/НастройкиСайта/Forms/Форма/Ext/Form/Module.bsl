
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КоллекцияМетаданных = ПолучитьЗаполненныеМетаданныеНаСервере();
	
	Имена = Новый Массив(КоллекцияМетаданных.Количество());
	Для Индекс = 0 По КоллекцияМетаданных.ВГраница() Цикл
		Имена[Индекс] = КоллекцияМетаданных[Индекс].Имя;
	КонецЦикла;
	
	Массив = ПолучитьСоставСтандартногоИнтерфейсаOData();
    Для Каждого ОбъектМетаданных Из Массив Цикл
		НоваяСтрока = АктивныеОбъекты.Добавить();
		Путь = СтрРазделить(ОбъектМетаданных.ПолноеИмя(), ".");
		Если Путь.Количество() > 0 Тогда
			Индекс = Имена.Найти(Путь[0]);
			Если Индекс = Неопределено Тогда
				ВызватьИсключение("Не найдена коллекция метаданных " + Путь[0]);
			КонецЕсли; 
			НоваяСтрока.КоллекцияМетаданных = КоллекцияМетаданных[Индекс].Коллекция;
		КонецЕсли;
		Если Путь.Количество() > 1 Тогда
			НоваяСтрока.ОбъектКонфигурации = Путь[1];
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Массив = ПолучитьЗаполненныеМетаданныеНаСервере();
	ОбновитьСписокВыбора(Массив, Элементы.АктивныеОбъектыКоллекцияМетаданных.СписокВыбора);
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьКоллекциюМетаданныхНаСервере()
	Результат = Новый Массив();
	Названия = "Коллекция,Имя,Name";
	Результат.Добавить(Новый Структура(Названия,"Справочники",	"Справочник",	"Catalog"));
	Результат.Добавить(Новый Структура(Названия,"Документы",	"Документ",		"Document"));
	Результат.Добавить(Новый Структура(Названия,"Константы",	"Константа",	"Constant"));
	Результат.Добавить(Новый Структура(Названия,"ПланыОбмена",	"ПланОбмена",	"ExchangePlan"));
	Результат.Добавить(Новый Структура(Названия,"ПланыСчетов",	"ПланСчетов",	"ChartOfAccounts"));
	Результат.Добавить(Новый Структура(Названия,"Задачи",		"Задача",		"Task"));
	Результат.Добавить(Новый Структура(Названия,"ЖурналыДокументов",	"ЖурналДокументов",	"DocumentJournal"));
	Результат.Добавить(Новый Структура(Названия,"ПланыВидовРасчета",	"ПланВидовРасчета",	"ChartOfCalculationTypes"));
	Результат.Добавить(Новый Структура(Названия,"РегистрыСведений",		"РегистрСведений",	"InformationRegister"));
	Результат.Добавить(Новый Структура(Названия,"РегистрыНакопления",	"РегистрНакопления","AccumulationRegister"));
	Результат.Добавить(Новый Структура(Названия,"РегистрыРасчета",		"РегистрРасчета",	"CalculationRegister"));
	Результат.Добавить(Новый Структура(Названия,"БизнесПроцессы",		"БизнесПроцесс",	"BusinessProcess"));
	Результат.Добавить(Новый Структура(Названия,"РегистрыБухгалтерии",		"РегистрБухгалтерии",		"AccountingRegister"));
	Результат.Добавить(Новый Структура(Названия,"ПланыВидовХарактеристик",	"ПланВидовХарактеристик",	"ChartOfCharacteristicTypes"));
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗаполненныеМетаданныеНаСервере()
	Коллекция = ПолучитьКоллекциюМетаданныхНаСервере();
	Индекс = 0;
	Пока Индекс < Коллекция.Количество() Цикл
		Строка = Коллекция[Индекс];
		Если Метаданные[Строка.Коллекция].Количество() = 0 Тогда
			Коллекция.Удалить(Индекс);
		Иначе
			Индекс = Индекс + 1;
		КонецЕсли; 
	КонецЦикла; 
	Возврат Коллекция;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокМетаданныхНаСервере(ПутьМетаданных)
	Массив = Новый Массив();
	Коллекция = Метаданные[ПутьМетаданных];
	Для каждого КлЗнч Из Коллекция Цикл
		Массив.Добавить(КлЗнч.Имя);
	КонецЦикла; 
	Возврат Массив;
КонецФункции


&НаКлиенте
Процедура АктивныеОбъектыОбъектКонфигурацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Строка = Элементы.АктивныеОбъекты.ТекущиеДанные;
	Массив = ПолучитьСписокМетаданныхНаСервере(Строка.КоллекцияМетаданных);
	СписокЗначений = Элементы.АктивныеОбъектыОбъектКонфигурации.СписокВыбора;
	СписокЗначений.Очистить();
	Для каждого Имя Из Массив Цикл
		СписокЗначений.Добавить(Имя, Имя);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура АктивныеОбъектыОбъектКонфигурацииПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбора(Массив, СписокЗначений)
	СписокЗначений.Очистить();
	Для каждого Коллекция Из Массив Цикл
		СписокЗначений.Добавить(Коллекция.Коллекция, Коллекция.Имя);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура АктивныеОбъектыКоллекцияМетаданныхПриИзменении(Элемент)
	Строка = Элементы.АктивныеОбъекты.ТекущиеДанные;
	Строка.ОбъектКонфигурации = "";
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОбъектыOData(Команда)
	ОбновитьСоставИнтерфейсаOData();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСоставИнтерфейсаOData()	
	Массив = Новый Массив();
	Для Каждого Путь Из АктивныеОбъекты Цикл
		Если ЗначениеЗаполнено(Путь.КоллекцияМетаданных) 
			И ЗначениеЗаполнено(Путь.ОбъектКонфигурации) Тогда
			ОбъектМетаданных = Метаданные[Путь.КоллекцияМетаданных][Путь.ОбъектКонфигурации];
		    Массив.Добавить(ОбъектМетаданных); 
		КонецЕсли; 
	КонецЦикла;
    УстановитьСоставСтандартногоИнтерфейсаOData(Массив);
	Модифицированность = Ложь;
КонецПроцедуры
